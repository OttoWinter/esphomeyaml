esphome:
  name: $devicename
  platform: ESP32
  board: nodemcu-32s
  build_path: build/test4

substitutions:
  devicename: test-4

ethernet:
  type: LAN8720
  mdc_pin: GPIO23
  mdio_pin: GPIO25
  clk_mode: GPIO0_IN
  phy_addr: 0
  power_pin: GPIO25
  manual_ip:
    static_ip: 192.168.178.56
    gateway: 192.168.178.1
    subnet: 255.255.255.0
  domain: .local

api:

i2c:
  sda: 21
  scl: 22
  scan: False

spi:
  clk_pin: GPIO21
  mosi_pin: GPIO22
  miso_pin: GPIO23

uart:
  tx_pin: GPIO22
  rx_pin: GPIO23
  baud_rate: 115200
  id: uart_1

ota:
  safe_mode: True
  port: 3286

logger:
  level: DEBUG

web_server:
  auth:
    username: admin
    password: admin

time:
  - platform: sntp
    id: sntp_time

tuya:
  time_id: sntp_time

sensor:
  - platform: homeassistant
    entity_id: sensor.hello_world
    id: ha_hello_world
  - platform: tuya
    id: tuya_sensor
    sensor_datapoint: 1
  #
  # platform sensor.apds9960 requires component apds9960
  #
  #  - platform: apds9960
  #    type: proximity
  #    name: APDS9960 Proximity
  #  - platform: apds9960
  #    type: clear
  #    name: APDS9960 Clear
  #  - platform: apds9960
  #    type: red
  #    name: APDS9960 Red
  #  - platform: apds9960
  #    type: green
  #    name: APDS9960 Green
  #  - platform: apds9960
  #    type: blue
  #    name: APDS9960 Blue

  - platform: modbus_component
    modbus_id: modbus_epsolar
    id: traceranx
    ## the Modbus device addr
    address: 0x1
    ## Any modbus registers not already implemented can be defined here
    ##
    sensors:
      - id: pv_input_voltage
        name: "PV array input voltage"
        address: 0x3100
        offset: 0
        unit_of_measurement: "V" ## for any other unit the value is returned in minutes
        modbus_functioncode: "read_input_registers"
        value_type: U_SINGLE
        scale_factor: 0.01
        accuracy_decimals: 1

      - id: pv_input_current
        name: "PV array input current"
        address: 0x3100
        offset: 1
        unit_of_measurement: "A" ## for any other unit the value is returned in minutes
        modbus_functioncode: "read_input_registers"
        value_type: U_SINGLE
        scale_factor: 0.01
        accuracy_decimals: 1

      - id: pv_input_power
        name: "PV array input power"
        address: 0x3100
        offset: 2
        unit_of_measurement: "W" ## for any other unit the value is returned in minutes
        modbus_functioncode: "read_input_registers"
        value_type: U_DOUBLE
        scale_factor: 0.01
        accuracy_decimals: 1

      - id: battery_power
        name: "Battery power"
        address: 0x3100
        offset: 6
        unit_of_measurement: "W" ## for any other unit the value is returned in minutes
        modbus_functioncode: "read_input_registers"
        value_type: U_DOUBLE
        scale_factor: 0.01
        accuracy_decimals: 1

      - id: load_voltage
        name: "Load voltage"
        address: 0x3100
        offset: 0xC
        unit_of_measurement: "V" ## for any other unit the value is returned in minutes
        modbus_functioncode: "read_input_registers"
        value_type: U_SINGLE
        scale_factor: 0.01
        accuracy_decimals: 1

      - id: load_current
        name: "Load Current"
        address: 0x3100
        offset: 0xD
        unit_of_measurement: "V" ## for any other unit the value is returned in minutes
        modbus_functioncode: "read_input_registers"
        value_type: U_SINGLE
        scale_factor: 0.01
        accuracy_decimals: 1

      - id: load_power
        name: "Load power"
        address: 0x3100
        offset: 0xE
        unit_of_measurement: "W" ## for any other unit the value is returned in minutes
        modbus_functioncode: "read_input_registers"
        value_type: U_DOUBLE
        scale_factor: 0.01
        accuracy_decimals: 1

      - id: battery_temperature
        name: "Battery temperature"
        address: 0x3100
        offset: 10
        unit_of_measurement: "째C" ## for any other unit the value is returned in minutes
        modbus_functioncode: "read_input_registers"
        value_type: U_SINGLE
        scale_factor: 0.01
        accuracy_decimals: 1

      - id: device_temperature
        name: "Device temperature"
        address: 0x311A
        offset: 0
        unit_of_measurement: "%" ## for any other unit the value is returned in minutes
        modbus_functioncode: "read_input_registers"
        value_type: U_SINGLE
        scale_factor: 1
        accuracy_decimals: 1

      - id: battery_soc
        name: "Battery SOC"
        address: 0x3100
        offset: 11
        unit_of_measurement: "째C" ## for any other unit the value is returned in minutes
        modbus_functioncode: "read_input_registers"
        value_type: U_SINGLE
        scale_factor: 0.01
        accuracy_decimals: 0

      - id: remote_battery_temperature
        name: "Remote battery temperature"
        address: 0x311A
        offset: 1
        unit_of_measurement: "째C" ## for any other unit the value is returned in minutes
        modbus_functioncode: "read_input_registers"
        value_type: U_SINGLE
        scale_factor: 0.01
        accuracy_decimals: 1

      - id: length_of_night_hours
        address: 0x9065
        offset: 0
        unit_of_measurement: "h" ## for any other unit the value is returned in minutes
        name: "Length of night"
        modbus_functioncode: read_holding_registers
        value_type: U_SINGLE
        scale_factor: 1.0

    binary_sensors:
      - id: default_load_mode
        modbus_functioncode: read_holding_registers
        address: 0x906A
        offset: 0
        name: "Default Load On/Off"
        bitmask: 1
    update_interval: 30s
  # - platform: modbus_component
  #   id: modbase
  #   binary_sensors:
  #   - id: default_load_mode2
  #     modbus_functioncode: read_holding_registers
  #     address: 0x906A
  #     offset: 0
  #     name: 'Default Load On/Off 2'
  #     bitmask: 1
#        sensor:
#        - sensor1:
#          - offset: 1
#            name: max
#            value_type: 1
#        - sensor1:
#          - offset: 1
#            name: max
#            value_type: 1
#      - start_address: 0x3300
#        type: read_discrete_inputs
#        sensor:
#        - sensor1:
#          - offset: 1
#            name: max
#            value_type: 1
#        - sensor1:
#          - offset: 1
#            name: max
#            value_type: 1

#  ranges:
#  - start_address: '0x3100'
#    registerType: 0
#    sensor:
#     offset: 1
#     name: max
#     value_type: 1
#    binarysensor:
#      offset: 2
#      name: max
#      value_type: 1

binary_sensor:
  - platform: tuya
    id: tuya_binary_sensor
    sensor_datapoint: 1

climate:
  - platform: tuya
    id: tuya_climate
    switch_datapoint: 1
    target_temperature_datapoint: 3
    current_temperature_multiplier: 0.5
    target_temperature_multiplier: 0.5

switch:
  - platform: tuya
    id: tuya_switch
    switch_datapoint: 1

light:
  - platform: fastled_clockless
    id: led_matrix_32x8
    name: "led_matrix_32x8"
    chipset: WS2812B
    pin: GPIO15
    num_leds: 256
    rgb_order: GRB
    default_transition_length: 0s
    color_correct: [50%, 50%, 50%]

display:
  - platform: addressable_light
    id: led_matrix_32x8_display
    addressable_light_id: led_matrix_32x8
    width: 32
    height: 8
    pixel_mapper: |-
      if (x % 2 == 0) {
        return (x * 8) + y;
      }
      return (x * 8) + (7 - y);
    lambda: |-
      Color red = Color(0xFF0000);
      Color green = Color(0x00FF00);
      Color blue = Color(0x0000FF);
      it.rectangle(0, 0, it.get_width(), it.get_height(), red);
      it.rectangle(1, 1, it.get_width()-2, it.get_height()-2, green);
      it.rectangle(2, 2, it.get_width()-4, it.get_height()-4, blue);
      it.rectangle(3, 3, it.get_width()-6, it.get_height()-6, red);
    rotation: 0째
    update_interval: 16ms
