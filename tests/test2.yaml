esphome:
  name: $devicename
  platform: ESP32
  board: nodemcu-32s
  build_path: build/test2

substitutions:
  devicename: test2

ethernet:
  type: LAN8720
  mdc_pin: GPIO23
  mdio_pin: GPIO25
  clk_mode: GPIO0_IN
  phy_addr: 0
  power_pin: GPIO25
  enable_mdns: false
  manual_ip:
    static_ip: 192.168.178.56
    gateway: 192.168.178.1
    subnet: 255.255.255.0
  domain: .local

api:

i2c:
  sda: 21
  scl: 22
  scan: False

spi:
  clk_pin: GPIO21
  mosi_pin: GPIO22
  miso_pin: GPIO23

uart:
  - tx_pin: GPIO22
    rx_pin: GPIO23
    baud_rate: 115200
    id: uart0

modbus:
  id: modbus_epsolar
  ctrl_pin: 5 # if you need to set the driver enable (DE) pin high before transmitting data configure it here
  uart_id: uart0

mqtt:
  broker: "192.168.178.84"
  port: 1883

ota:
  safe_mode: True
  port: 3286
  num_attempts: 15

logger:
  level: DEBUG

deep_sleep:
  run_duration: 20s
  sleep_duration: 50s
  wakeup_pin: GPIO39
  wakeup_pin_mode: INVERT_WAKEUP

as3935_i2c:
  irq_pin: GPIO12

mcp3008:
  - id: "mcp3008_hub"
    cs_pin: GPIO12

sensor:
  - platform: homeassistant
    entity_id: sensor.hello_world
    id: ha_hello_world
  - platform: ble_rssi
    mac_address: AC:37:43:77:5F:4C
    name: "BLE Google Home Mini RSSI value"
  - platform: ble_rssi
    service_uuid: "11aa"
    name: "BLE Test Service 16"
  - platform: ble_rssi
    service_uuid: "11223344"
    name: "BLE Test Service 32"
  - platform: ble_rssi
    service_uuid: "11223344-5566-7788-99aa-bbccddeeff00"
    name: "BLE Test Service 128"
  - platform: b_parasite
    mac_address: F0:CA:F0:CA:01:01
    humidity:
      name: "b-parasite Air Humidity"
    temperature:
      name: "b-parasite Air Temperature"
    moisture:
      name: "b-parasite Soil Moisture"
    battery_voltage:
      name: "b-parasite Battery Voltage"
  - platform: senseair
    id: senseair0
    co2:
      name: "SenseAir CO2 Value"
      on_value:
        then:
          - senseair.background_calibration: senseair0
          - senseair.background_calibration_result: senseair0
          - senseair.abc_get_period: senseair0
          - senseair.abc_enable: senseair0
          - senseair.abc_disable: senseair0
    update_interval: 15s
  - platform: ruuvitag
    mac_address: FF:56:D3:2F:7D:E8
    humidity:
      name: "RuuviTag Humidity"
    temperature:
      name: "RuuviTag Temperature"
    pressure:
      name: "RuuviTag Pressure"
    acceleration_x:
      name: "RuuviTag Acceleration X"
    acceleration_y:
      name: "RuuviTag Acceleration Y"
    acceleration_z:
      name: "RuuviTag Acceleration Z"
    battery_voltage:
      name: "RuuviTag Battery Voltage"
    tx_power:
      name: "RuuviTag TX Power"
    movement_counter:
      name: "RuuviTag Movement Counter"
    measurement_sequence_number:
      name: "RuuviTag Measurement Sequence Number"
  - platform: as3935
    lightning_energy:
      name: "Lightning Energy"
    distance:
      name: "Distance Storm"
  - platform: xiaomi_hhccjcy01
    mac_address: 94:2B:FF:5C:91:61
    temperature:
      name: "Xiaomi HHCCJCY01 Temperature"
    moisture:
      name: "Xiaomi HHCCJCY01 Moisture"
    illuminance:
      name: "Xiaomi HHCCJCY01 Illuminance"
    conductivity:
      name: "Xiaomi HHCCJCY01 Soil Conductivity"
    battery_level:
      name: "Xiaomi HHCCJCY01 Battery Level"
  - platform: xiaomi_lywsdcgq
    mac_address: 7A:80:8E:19:36:BA
    temperature:
      name: "Xiaomi LYWSDCGQ Temperature"
    humidity:
      name: "Xiaomi LYWSDCGQ Humidity"
    battery_level:
      name: "Xiaomi LYWSDCGQ Battery Level"
  - platform: xiaomi_lywsd02
    mac_address: 3F:5B:7D:82:58:4E
    temperature:
      name: "Xiaomi LYWSD02 Temperature"
    humidity:
      name: "Xiaomi LYWSD02 Humidity"
    battery_level:
      name: "Xiaomi LYWSD02 Battery Level"
  - platform: xiaomi_cgg1
    mac_address: 7A:80:8E:19:36:BA
    temperature:
      name: "Xiaomi CGG1 Temperature"
    humidity:
      name: "Xiaomi CGG1 Humidity"
    battery_level:
      name: "Xiaomi CGG1 Battery Level"
  - platform: xiaomi_gcls002
    mac_address: "94:2B:FF:5C:91:61"
    temperature:
      name: "GCLS02 Temperature"
    moisture:
      name: "GCLS02 Moisture"
    conductivity:
      name: "GCLS02 Soil Conductivity"
    illuminance:
      name: "GCLS02 Illuminance"
  - platform: xiaomi_hhccpot002
    mac_address: "94:2B:FF:5C:91:61"
    moisture:
      name: "HHCCPOT002 Moisture"
    conductivity:
      name: "HHCCPOT002 Soil Conductivity"
  - platform: xiaomi_lywsd03mmc
    mac_address: "A4:C1:38:4E:16:78"
    bindkey: "e9efaa6873f9f9c87a5e75a5f814801c"
    temperature:
      name: "Xiaomi LYWSD03MMC Temperature"
    humidity:
      name: "Xiaomi LYWSD03MMC Humidity"
    battery_level:
      name: "Xiaomi LYWSD03MMC Battery Level"
  - platform: xiaomi_cgd1
    mac_address: "A4:C1:38:D1:61:7D"
    bindkey: "c99d2313182473b38001086febf781bd"
    temperature:
      name: "Xiaomi CGD1 Temperature"
    humidity:
      name: "Xiaomi CGD1 Humidity"
    battery_level:
      name: "Xiaomi CGD1 Battery Level"
  - platform: xiaomi_jqjcy01ym
    mac_address: "7A:80:8E:19:36:BA"
    temperature:
      name: "JQJCY01YM Temperature"
    humidity:
      name: "JQJCY01YM Humidity"
    formaldehyde:
      name: "JQJCY01YM Formaldehyde"
    battery_level:
      name: "JQJCY01YM Battery Level"
  - platform: atc_mithermometer
    mac_address: "A4:C1:38:4E:16:78"
    temperature:
      name: "ATC Temperature"
    humidity:
      name: "ATC Humidity"
    battery_level:
      name: "ATC Battery-Level"
    battery_voltage:
      name: "ATC Battery-Voltage"
  - platform: inkbird_ibsth1_mini
    mac_address: 38:81:D7:0A:9C:11
    temperature:
      name: "Inkbird IBS-TH1 Temperature"
    humidity:
      name: "Inkbird IBS-TH1 Humidity"
    battery_level:
      name: "Inkbird IBS-TH1 Battery Level"

  ### Note enabling all sensors will probably cause a stackoverflow
  ### https://github.com/esphome/issues/issues/855
  - platform: epsolar
    modbus_id: modbus_epsolar
    id: traceran
    ## the Modbus device addr
    address: 0x1
    array_rated_voltage:
      name: "array_rated_voltage"
    array_rated_current:
      name: "array_rated_current"
    array_rated_power:
      name: "array_rated_power"
    battery_rated_voltage:
      name: "battery_rated_voltage"
    battery_rated_current:
      name: "battery_rated_current"
    battery_rated_power:
      name: "battery_rated_power"
    charging_mode:
      name: "charging_mode"
    rated_current_of_load:
      name: "rated_current_of_load"
    pv_input_voltage:
      name: "PV array input voltage"
    pv_input_current:
      name: "PV array input current"
    pv_power:
      name: "PV array input power"
    battery_power:
      name: "Battery Power"
    #    address: 0x3100
    load_voltage:
      name: "Load Voltage"
    load_current:
      name: "Load Current"
    load_power:
      name: "Load Power"
    battery_temperature:
      name: "Battery Temperature"
    device_temperature:
      name: "Device Temperature"
    battery_soc:
      name: "Battery Remaining Capacity"
    remote_battery_temperature:
      name: "Remote Battery Temperature"
    max_pv_voltage_today:
      name: "Maximum PV voltage today"
    min_pv_voltage_today:
      name: "Minimum PV voltage today"
    max_battery_voltage_today:
      name: "Maximum battery voltage today"
    min_battery_today:
      name: "Minimum battery voltage today"
    consumed_energy_today:
      name: "Consumed energy today"
    consumed_energy_month:
      name: "Consumed Energy Month"
    consumed_energy_year:
      name: "Consumed energy year"
    consumed_energy_total:
      name: "Consumed energy total"
    generated_energy_today:
      name: "Generated energy today"
    generated_energy_month:
      name: "Generated energy month"
    generated_energy_year:
      name: "Generated energy year"
    generated_energy_total:
      name: "Generated energy total"
    co2_reduction:
      name: "CO2 reduction"
    battery_voltage:
      name: "Battery voltage"
    battery_current:
      name: "Battery current"
    battery_type:
      name: "Battery Type"
    battery_resistence_error:
      name: "Battery Alert"
    battery_status:
      name: "Battery Status"
    charging_status:
      name: "Charging Status"
    discharging_status:
      name: "Discharging Status"
    battery_capacity:
      name: "Battery Capacity"
    temperature_compensation_coefficient:
      name: "temperature compensation coefficient"
    high_volt_disconnect:
      name: "high volt disconnect"
    charging_limit_voltage:
      name: "charging limit voltage"
    over_voltage_reconnect:
      name: "Over voltage reconnect"
    equalization_voltage:
      name: "Equalization Voltage"
    boost_voltage:
      name: "boost voltage"
    float_voltage:
      name: "float voltage"
    #    boost_reconnect_voltage:
    #      name: "boost reconnect voltage"
    #    low_voltage_reconnect:
    #      name: "low voltage reconnect"
    #    under_voltage_recover:
    #      name: "under voltage recover"
    #    under_voltage_warning:
    #      name: "under voltage warning"
    #    low_voltage_disconnect:
    #      name: "low voltage disconnect"
    #    discharging_limit_voltage:
    #      name: "discharging limit voltage"
    #    equalization_charging_cycle:
    #      name: "Equalization charging cycle"
    #    battery_temperature_warning_upper_limit:
    #      name: "Battery temperature warning upper limit"
    #    battery_temperature_warning_lower_limit:
    #      name: "Battery temperature warning lower limit"
    #    controller_inner_temperature_upper_limit:
    #      name: "Controller inner temperature upper limit"
    #    controller_inner_temperature_upper_limit_recover:
    #      name: "Controller inner temperature upper limit recover"
    #    power_component_temperature_upper_limit:
    #      name: "Power component temperature upper limit"
    #    power_component_temperature_upper_limit_recover:
    #      name: "Power component temperature upper limit recover"
    #    line_impedance:
    #      name: "Line Impedance"
    #    day_time_threshold_voltage:
    #      name: "Day Time Threshold Voltage"
    light_signal_startup_delay_time:
      name: "Light signal startup delay time"
    night_timethreshold_voltage:
      name: "Night TimeThreshold Voltage"
    light_signal_turn_off_delay_time:
      name: "Light signal turn off delay time"
    load_control_mode:
      name: "Load Control Mode"
      filters:
        - lambda: return x + 0.0;
    is_night:
      name: "is night"
    device_overtemperature:
      name: "Over temperature inside the device"
    manual_control_load:
      name: "manual control the load"
    enable_load_test_mode:
      name: "enable load test mode"
    force_load_on:
      name: "force_load the on/off"
      filters:
        - invert:
    sync_rtc: true

    ## Any modbus registers not already implemented can be defined here
    ##
    sensors:
      - id: length_of_night_hours
        address: 0x9065
        offset: 0
        unit_of_measurement: "h" ## for any other unit the value is returned in minutes
        name: "Length of night"
        modbus_functioncode: read_holding_registers
        value_type: U_SINGLE
        scale_factor: 1.0

    binary_sensors:
      - id: default_load_mode
        modbus_functioncode: read_holding_registers
        address: 0x906A
        offset: 0
        name: "Default Load On/Off"
        bitmask: 1
    update_interval: 30s

  - platform: sgp40
    name: "Workshop VOC"
    update_interval: 5s
    store_baseline: "true"
  - platform: mcp3008
    update_interval: 5s
    mcp3008_id: "mcp3008_hub"
    id: freezer_temp_source
    reference_voltage: 3.19
    number: 0
time:
  - platform: homeassistant
    on_time:
      - at: "16:00:00"
        then:
          - logger.log: It's 16:00

esp32_touch:
  setup_mode: True

binary_sensor:
  - platform: homeassistant
    entity_id: binary_sensor.hello_world
    id: ha_hello_world_binary
  - platform: ble_presence
    mac_address: AC:37:43:77:5F:4C
    name: "ESP32 BLE Tracker Google Home Mini"
  - platform: ble_presence
    service_uuid: "11aa"
    name: "BLE Test Service 16 Presence"
  - platform: ble_presence
    service_uuid: "11223344"
    name: "BLE Test Service 32 Presence"
  - platform: ble_presence
    service_uuid: "11223344-5566-7788-99aa-bbccddeeff00"
    name: "BLE Test Service 128 Presence"
  - platform: esp32_touch
    name: "ESP32 Touch Pad GPIO27"
    pin: GPIO27
    threshold: 1000
  - platform: as3935
    name: "Storm Alert"
  - platform: xiaomi_mue4094rt
    name: "MUE4094RT Motion"
    mac_address: "7A:80:8E:19:36:BA"
    timeout: "5s"
  - platform: xiaomi_mjyd02yla
    name: "MJYD02YL-A Motion"
    mac_address: "50:EC:50:CD:32:02"
    bindkey: "48403ebe2d385db8d0c187f81e62cb64"
    idle_time:
      name: "MJYD02YL-A Idle Time"
    light:
      name: "MJYD02YL-A Light Status"
    battery_level:
      name: "MJYD02YL-A Battery Level"
  - platform: xiaomi_wx08zm
    name: "WX08ZM Activation State"
    mac_address: "74:a3:4a:b5:07:34"
    tablet:
      name: "WX08ZM Tablet Resource"
    battery_level:
      name: "WX08ZM Battery Level"

esp32_ble_tracker:
  on_ble_advertise:
    - mac_address: AC:37:43:77:5F:4C
      then:
        - lambda: !lambda |-
            ESP_LOGD("main", "The device address is %s", x.address_str().c_str());
    - then:
        - lambda: !lambda |-
            ESP_LOGD("main", "The device address is %s", x.address_str().c_str());
  on_ble_service_data_advertise:
    - service_uuid: ABCD
      then:
        - lambda: !lambda |-
            ESP_LOGD("main", "Length of service data is %i", x.size());
  on_ble_manufacturer_data_advertise:
    - manufacturer_id: ABCD
      then:
        - lambda: !lambda |-
            ESP_LOGD("main", "Length of manufacturer data is %i", x.size());

#esp32_ble_beacon:
#  type: iBeacon
#  uuid: 'c29ce823-e67a-4e71-bff2-abaa32e77a98'

status_led:
  pin: GPIO2

text_sensor:
  - platform: version
    name: "ESPHome Version"
    icon: mdi:icon
    id: version_sensor
    on_value:
      - if:
          condition:
            - api.connected:
          then:
            - lambda: !lambda |-
                ESP_LOGD("main", "The state is %s=%s", x.c_str(), id(version_sensor).state.c_str());
      - script.execute: my_script
      - homeassistant.service:
          service: notify.html5
          data:
            title: New Humidity
          data_template:
            message: The humidity is {{ my_variable }}%.
          variables:
            my_variable: |-
              return id(version_sensor).state;
            my_variable_str: |-
              return "Hello World";
      - homeassistant.service:
          service: light.turn_on
          data:
            entity_id: light.my_light
      - homeassistant.tag_scanned:
          tag: 1234-abcd
      - homeassistant.tag_scanned: 1234-abcd
      - deep_sleep.enter:
          sleep_duration: 30min
  - platform: template
    name: "Template Text Sensor"
    lambda: |-
      return {"Hello World"};
  - platform: homeassistant
    entity_id: sensor.hello_world2
    id: ha_hello_world2
  - platform: ble_scanner
    name: Scanner

script:
  - id: my_script
    mode: single
    then:
      - lambda: 'ESP_LOGD("main", "Hello World!");'
  - id: my_script_queued
    mode: queued
    max_runs: 2
    then:
      - lambda: 'ESP_LOGD("main", "Hello World!");'
  - id: my_script_parallel
    mode: parallel
    max_runs: 2
    then:
      - lambda: 'ESP_LOGD("main", "Hello World!");'
  - id: my_script_restart
    mode: restart
    then:
      - lambda: 'ESP_LOGD("main", "Hello World!");'

stepper:
  - platform: uln2003
    id: my_stepper
    pin_a: GPIO23
    pin_b: GPIO27
    pin_c: GPIO25
    pin_d: GPIO26
    sleep_when_done: no
    step_mode: HALF_STEP
    max_speed: 250 steps/s

    # Optional:
    acceleration: inf
    deceleration: inf

interval:
  interval: 5s
  then:
    - logger.log: "Interval Run"

display:
