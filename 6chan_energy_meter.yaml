substitutions:
# Change the disp_name to something you want
  disp_name: 6C
# Interval of how often the power is updated
  update_time: 10s
# 30A/1V SCT-013-030: 8650
# 50A/1V SCT-013-050: 15420
# 100A/50ma SCT-013-000: 32498
  current_cal: '32498'
# 9VAC Transformer for versions > meter v1.2
  voltage_cal: '7305'

esphome:
  name: 6chan_energy_meter
  platform: ESP32
  board: nodemcu-32s

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  manual_ip:
    static_ip: !secret ip_eh_nrgnode
    gateway: !secret ip_gateway
    subnet: !secret ip_subnet
    dns1: !secret ip_dns1

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

web_server:
  port: 80

spi:
  clk_pin: 18
  miso_pin: 19
  mosi_pin: 23

sensor:
  - platform: wifi_signal
    name: ${disp_name} WiFi
    update_interval: 60s
#IC1
  - platform: atm90e32
    cs_pin: 5
    phase_a:
      voltage:
        name: ${disp_name} Volts A
        id: ic1Volts
        accuracy_decimals: 1
      current:
        name: ${disp_name} CT1 Amps
        id: ct1Amps
      power:
        name: ${disp_name} CT1 Watts
        id: ct1Watts
      react_pow:
        name: ${disp_name} CT1 Reactive Power
        id: ct1ReactPow
      pf:
        name: ${disp_name} CT1 Power Factor
        id: ct1pf
      gain_voltage: ${voltage_cal}
      gain_ct: ${current_cal}
    phase_b:
      current:
        name: ${disp_name} CT2 Amps
        id: ct2Amps
      power:
        name: ${disp_name} CT2 Watts
        id: ct2Watts
      react_pow:
        name: ${disp_name} CT2 Reactive Power
        id: ct2ReactPow
      pf:
        name: ${disp_name} CT2 Power Factor
        id: ct2pf
      gain_voltage: ${voltage_cal}
      gain_ct: ${current_cal}
    phase_c:
      current:
        name: ${disp_name} CT3 Amps
        id: ct3Amps
      power:
        name: ${disp_name} CT3 Watts
        id: ct3Watts
      react_pow:
        name: ${disp_name} CT3 Reactive Power
        id: ct3ReactPow
      pf:
        name: ${disp_name} CT3 Power Factor
        id: ct3pf
      gain_voltage: ${voltage_cal}
      gain_ct: ${current_cal}
    frequency:
      name: ${disp_name} Freq A
    chip_temp:
      name: ${disp_name} Chip Temp A
    line_frequency: 60Hz
    gain_pga: 1X
    update_interval: ${update_time}
#IC2
  - platform: atm90e32
    cs_pin: 4
    phase_a:
      voltage:
        name: ${disp_name} Volts B
        id: ic2Volts
        accuracy_decimals: 1
      current:
        name: ${disp_name} CT4 Amps
        id: ct4Amps
      power:
        name: ${disp_name} CT4 Watts
        id: ct4Watts
      react_pow:
        name: ${disp_name} CT4 Reactive Power
        id: ct4ReactPow
      pf:
        name: ${disp_name} CT4 Power Factor
        id: ct4pf
      gain_voltage: ${voltage_cal}
      gain_ct: ${current_cal}
    phase_b:
      current:
        name: ${disp_name} CT5 Amps
        id: ct5Amps
      power:
        name: ${disp_name} CT5 Watts
        id: ct5Watts
      react_pow:
        name: ${disp_name} CT5 Reactive Power
        id: ct5ReactPow
      pf:
        name: ${disp_name} CT5 Power Factor
        id: ct5pf
      gain_voltage: ${voltage_cal}
      gain_ct: ${current_cal}
    phase_c:
      current:
        name: ${disp_name} CT6 Amps
        id: ct6Amps
      power:
        name: ${disp_name} CT6 Watts
        id: ct6Watts
      react_pow:
        name: ${disp_name} CT6 Reactive Power
        id: ct6ReactPow
      pf:
        name: ${disp_name} CT6 Power Factor
        id: ct6pf
      gain_voltage: ${voltage_cal}
      gain_ct: ${current_cal}
    frequency:
      name: ${disp_name} Freq B
    chip_temp:
      name: ${disp_name} Chip Temp B
    line_frequency: 60Hz
    gain_pga: 1X
    update_interval: ${update_time}

#Total Amps
  - platform: template
    name: ${disp_name} Total Amps
    id: totalAmps
    lambda: return id(ct1Amps).state + id(ct2Amps).state + id(ct3Amps).state + id(ct4Amps).state + id(ct5Amps).state + id(ct6Amps).state ;
    accuracy_decimals: 2
    unit_of_measurement: A
    icon: "mdi:current-ac"
    update_interval: ${update_time}
#Total Watts
  - platform: template
    name: ${disp_name} Total Watts
    id: totalWatts
    lambda: return id(ct1Watts).state + id(ct2Watts).state + id(ct3Watts).state + id(ct4Watts).state + id(ct5Watts).state + id(ct6Watts).state ;
    accuracy_decimals: 1
    unit_of_measurement: W
    icon: "mdi:power"
    update_interval: ${update_time}
#Total Reactive Power
  - platform: template
    name: ${disp_name} Total Reactive Power
    id: totalReactivePower
    lambda: return id(ct1ReactPow).state + id(ct2ReactPows).state + id(ct3ReactPow).state + id(ct4ReactPow).state + id(ct5ReactPow).state + id(ct6ReactPow).state ;
    accuracy_decimals: 1
    icon: "mdi:lightbulb"
    update_interval: ${update_time}
#Average Power Factor
  - platform: template
    name: ${disp_name} Average Power Factor
    id: avgPF
    lambda: return (id(ct1pf).state + id(ct2pf).state + id(ct3pf).state + id(ct4pf).state + id(ct5pf).state + id(ct6pf).state)/6 ;
    accuracy_decimals: 1
    icon: "mdi:flash"
    update_interval: ${update_time}
#kWh
  - platform: total_daily_energy
    name: ${disp_name} Total kWh
    power_id: totalWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh

switch:
  - platform: restart
    name: ${disp_name} Restart
time:
  - platform: sntp
    id: sntp_time
